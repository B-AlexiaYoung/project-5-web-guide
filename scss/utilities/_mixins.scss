// mixin for clearing
@mixin clearfix{
    &:after {
        content: "";
        display:table;
        clear: both;
    }
}


// mixin for generating background for grid background colors then button background colors.
@mixin gd_colors{
    @each $theme, $color in $colours{
        .grid__col--#{$theme}.theme__colors{
                background-color:$color;
                border-radius:$bdr-radius;
               /*  flex-grow:1;
                 @include doubly;  */
            } 
    };
 
};
// generate button colors   
@mixin btn_colors{
@each $theme, $color in $btn_colors{
 .btn--#{$theme}.theme__colors{
         background-color:$color;
         
            }
}
}
// mixin for calulating column widths

// adjacent sibling margins
    @mixin doubly ($margin: 1em) {
    & + &{
    margin-left: $margin;
    @content;
    }
};    


// mixin media query breakpoints  breakpoint variables set at 1px,769px and 1110px respectively.
@mixin media-qry($break){
    @if $break == "small"{
        @media(min-width: $breakpoint-small){
        // @include gd-colors; 
        @content;
    }
}
@else if $break =="medium"{
     @media(min-width: $breakpoint-medium){
    //@include gd-colors;
     @content;
    }
}
@else if $break == "large"{
    @media(min-width: $breakpoint-large){
        //@include gd-colors;
        
        @content;
    }
}
@else {
    @error "Could not retrieve value for `#{$break}`"
}
};


// mixin for nav items spacing 

@mixin spacing{
    padding-top: $nav-pad-top;
    padding-left: $nav-pad-left;
    padding-right: $nav-pad-right;
};

// mixin to create flex container


@mixin flex-container(
    $display:flex,
    $flex-dir:null,
    $wrap:null,
    $justify:null,
    $align-items:null,
    $flex-basis:null){
        display: $display;
        flex-direction: $flex-dir;
        flex-wrap: $wrap;
        justify-content: $justify;
        align-items: $align-items;
        };

@mixin remove-border{
    border-left:none;
    border-top:none;
    border-right:none;
    border-bottom:none;
}